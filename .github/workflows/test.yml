
name: Testing

on: [push, pull_request]

jobs:
  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Set Cache Key
      run: |
        echo "PY=$(python --version --version | sha256sum | cut -d' ' -f1)" >> "$GITHUB_ENV"
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}|${{ hashFiles('.pre-commit-hooks/*') }}
    - name: Install Dependencies
      run: |
        python -m pip install pre-commit==3.2.2
        pre-commit install --install-hooks
    - name: Run Pre-Commit
      run: |
        pre-commit run --show-diff-on-failure --color=always --all-files


  PyLint:
    runs-on: ubuntu-latest
    needs: Pre-Commit

    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9 For PyLint
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Lint Requirements
      run: |
        nox --force-color -e lint --install-only

    - name: Run PyLint
      env:
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e lint


  Docs:
    runs-on: ubuntu-latest
    needs: Pre-Commit

    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.7 For Nox
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Doc Requirements
      run: |
        nox --force-color -e docs --install-only

    - name: Build Docs
      env:
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e docs


  Linux:
    runs-on: ubuntu-latest
    needs: Pre-Commit

    timeout-minutes: 15

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - {"salt-version": "3005.0", "python-version": "3.7"}
          - {"salt-version": "3005.0", "python-version": "3.8"}
          - {"salt-version": "3005.0", "python-version": "3.9"}
          - {"salt-version": "3006.0", "python-version": "3.7"}
          - {"salt-version": "3006.0", "python-version": "3.8"}
          - {"salt-version": "3006.0", "python-version": "3.9"}
          - {"salt-version": "3006.0", "python-version": "3.10"}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Test Requirements
      env:
        SALT_REQUIREMENT: salt~=${{ matrix.salt-version }}
      run: |
        nox --force-color -e tests-3 --install-only

    - name: Test
      env:
        SALT_REQUIREMENT: salt~=${{ matrix.salt-version }}
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e tests-3 -- -vv tests/

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@main
      with:
        name: runtests-${{ runner.os }}-${{ matrix.python-version }}-salt-${{ matrix.salt-version }}.log
        path: artifacts/runtests-*.log


#  Windows:
#    runs-on: windows-latest
#    needs: Pre-Commit
#
#    timeout-minutes: 40
#
#    strategy:
#      fail-fast: false
#      max-parallel: 3
#      matrix:
#        include:
#          - {"salt-version": "3005.0", "python-version": "3.8"}
#          - {"salt-version": "3005.0", "python-version": "3.9"}
#          - {"salt-version": "3006.0", "python-version": "3.8"}
#          - {"salt-version": "3006.0", "python-version": "3.9"}
#          - {"salt-version": "3006.0", "python-version": "3.10"}
#
#    steps:
#    - uses: actions/checkout@v3
#
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v4
#      with:
#        python-version: ${{ matrix.python-version }}
#
#    - name: Install Nox
#      run: |
#        python -m pip install --upgrade pip
#        pip install nox
#
#    - name: Install Test Requirements
#      shell: bash
#      env:
#        SALT_REQUIREMENT: salt~=${{ matrix.salt-version }}
#        EXTRA_REQUIREMENTS_INSTALL: Cython
#      run: |
#        nox --force-color -e tests-3 --install-only
#
#    - name: Test
#      shell: bash
#      env:
#        SALT_REQUIREMENT: salt~=${{ matrix.salt-version }}
#        SKIP_REQUIREMENTS_INSTALL: YES
#      run: |
#        nox --force-color -e tests-3 -- -vv tests/
#
#    - name: Upload Logs
#      if: always()
#      uses: actions/upload-artifact@main
#      with:
#        name: runtests-${{ runner.os }}-${{ matrix.python-version }}-salt-${{ matrix.salt-version }}.logg
#        path: artifacts/runtests-*.log

  macOS:
    runs-on: macOS-latest
    needs: Pre-Commit

    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        include:
          - {"salt-version": "3005.0", "python-version": "3.9"}
          - {"salt-version": "3006.0", "python-version": "3.9"}
          - {"salt-version": "3006.0", "python-version": "3.10"}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Test Requirements
      env:
        SALT_REQUIREMENT: salt~=${{ matrix.salt-version }}
      run: |
        nox --force-color -e tests-3 --install-only

    - name: Test
      env:
        SALT_REQUIREMENT: salt~=${{ matrix.salt-version }}
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e tests-3 -- -vv tests/

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@main
      with:
        name: runtests-${{ runner.os }}-${{ matrix.python-version }}-salt-${{ matrix.salt-version }}.log
        path: artifacts/runtests-*.log

  Build:
    runs-on: ubuntu-latest
    needs:
      - Docs
      - PyLint
      - Linux
#      - Windows
      - macOS
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Nox
      run: |
        python -m pip install nox
    - name: Build a binary wheel and a source tarball
      run: |
        nox -e build

#    - name: Publish distribution ðŸ“¦ to Test PyPI
#      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        user: __token__
#        password: ${{ secrets.TEST_PYPI_TOKEN }}
#        repository_url: https://test.pypi.org/legacy/
#        print_hash: true
