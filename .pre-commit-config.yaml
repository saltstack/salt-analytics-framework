---
minimum_pre_commit_version: 2.4.0
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict  # Check for files that contain merge conflict strings.
      - id: trailing-whitespace   # Trims trailing whitespace.
        args: [--markdown-linebreak-ext=md]
      - id: mixed-line-ending     # Replaces or checks mixed line ending.
        args: [--fix=lf]
      - id: end-of-file-fixer     # Makes sure files end in a newline and only a newline.
      - id: check-merge-conflict  # Check for files that contain merge conflict strings.
      - id: check-ast             # Simply check whether files parse as valid python.

  # ----- Local Hooks ----------------------------------------------------------------------------------------------->
  - repo: local
    hooks:
      - id: sort-pylint-spelling-words
        name: Sort PyLint Spelling Words File
        entry: python .pre-commit-hooks/sort-pylint-spelling-words.py
        language: system
        files: ^\.pylint-spelling-words$

      - id: check-changelog-entries
        name: Check Changelog Entries
        entry: python .pre-commit-hooks/check-changelog-entries.py
        language: system

  - repo: local
    hooks:
      - id: check-cli-examples
        name: Check CLI examples on execution modules
        entry: python .pre-commit-hooks/check-cli-examples.py
        language: system
        files: ^src/saf/modules/.*\.py$

  - repo: local
    hooks:
      - id: check-docs
        name: Check rST doc files exist for modules/states
        entry: python .pre-commit-hooks/make-autodocs.py
        language: system
        pass_filenames: false

  - repo: local
    hooks:
      - id: check-copyright-headers
        name: Check python modules for appropriate copyright headers
        files: ^.*\.py$
        entry: python .pre-commit-hooks/copyright-headers.py
        language: system
  # <---- Local Hooks ------------------------------------------------------------------------------------------------

  - repo: https://github.com/s0undt3ch/python-tools-scripts
    rev: "0.12.0"
    hooks:
      - id: tools
        alias: actionlint
        name: Lint GitHub Actions Workflows
        files: "^.github/workflows/"
        types:
          - yaml
        args:
          - pre-commit
          - actionlint
        additional_dependencies:
          - boto3==1.21.46
          - pyyaml==6.0
          - jinja2==3.1.2
          - packaging==23.0

  # ----- Formatting ---------------------------------------------------------------------------->
  - repo: https://github.com/saltstack/pre-commit-remove-import-headers
    rev: 1.1.0
    hooks:
      - id: remove-import-headers

  - repo: https://github.com/s0undt3ch/salt-rewrite
    # Automatically rewrite code with known rules
    rev: 2.0.0
    hooks:
      - id: salt-rewrite
        alias: rewrite-docstrings
        name: Salt extensions docstrings auto-fixes
        files: ^src/saf/.*\.py$
        args: [--silent]

  - repo: https://github.com/s0undt3ch/salt-rewrite
    # Automatically rewrite code with known rules
    rev: 2.0.0
    hooks:
      - id: salt-rewrite
        alias: rewrite-tests
        name: Rewrite the test suite
        files: ^tests/.*\.py$
        args: [--silent, -E, fix_docstrings]

  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.9.0
    hooks:
      - id: reorder-python-imports
        args: [
          --py37-plus,
          --application-directories=.:src,
          --add-import=from __future__ import annotations
        ]
        exclude: (?x)^(
          demo/.*
          |
          .pre-commit-hooks/.*
          |
          src/saf/version
          )\.py$

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.2
    hooks:
      - id: pyupgrade
        name: Rewrite Code to be Py3.7+
        args: [
          --py37-plus
        ]
        files: ^((setup|noxfile)|(src|tests)/.*)\.py$
        exclude: (?x)^(
            demo/.*
            |
            .pre-commit-hooks/.*
            |
            src/saf/(
              version
              |
              models
              |
              (
                collect
                |
                process
                |
                forward
              )/.*
            )
          )\.py

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.2
    hooks:
      - id: pyupgrade
        name: Rewrite Code to be Py3.7+ (Pydantic Models)
        args: [
          --py37-plus,
          --keep-runtime-typing,
        ]
        files: (?x)^(
            src/saf/(
              version
              |
              models
              |
              (
                collect
                |
                process
                |
                forward
              )/.*
            )
          )\.py$
        exclude: (?x)^(
          demo/.*
          |
          .pre-commit-hooks/.*
          |
          src/saf/version
          |
          tests/.*
          )\.py$

  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        args: [-l 100]
        exclude: src/saf/version.py

  - repo: https://github.com/asottile/blacken-docs
    rev: 1.13.0
    hooks:
      - id: blacken-docs
        args: [--skip-errors]
        files: ^(docs/.*\.rst|src/saf/.*\.py)$
        additional_dependencies:
          - black==23.3.0
  # <---- Formatting -----------------------------------------------------------------------------

  # ----- Security ------------------------------------------------------------------------------>
  - repo: https://github.com/PyCQA/bandit
    rev: "1.7.5"
    hooks:
      - id: bandit
        alias: bandit-salt
        name: Run bandit against the code base
        args: [--silent, -lll, --skip, B701]
        files: ^(?!tests/).*\.py$
        exclude: src/saf/version.py
  - repo: https://github.com/PyCQA/bandit
    rev: "1.7.5"
    hooks:
      - id: bandit
        alias: bandit-tests
        name: Run bandit against the test suite
        args: [--silent, -lll, --skip, B701]
        files: ^tests/.*
  # <---- Security -------------------------------------------------------------------------------

  # ----- Code Analysis ------------------------------------------------------------------------->
  - repo: https://github.com/pycqa/flake8
    rev: '6.0.0'
    hooks:
      - id: flake8
        exclude: ^(demo/.*|src/saf/version\.py|\.pre-commit-hooks/.*\.py)$
        additional_dependencies:
        - flake8-mypy-fork
        - flake8-docstrings
        - flake8-typing-imports

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.2.0
    hooks:
      - id: mypy
        name: Run mypy against the code base
        files: ^(src/|tests/).*\.py$
        args: []
        additional_dependencies:
          - types-attrs
          - types-setuptools
          - pydantic
  # <---- Code Analysis --------------------------------------------------------------------------
