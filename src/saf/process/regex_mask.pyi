from typing import Any
from typing import overload

from saf.process.regex_mask import RegexMaskProcessConfig

@overload
def _regex_process(obj: str, config: RegexMaskProcessConfig) -> str: ...
@overload
def _regex_process(obj: set[Any], config: RegexMaskProcessConfig) -> set[Any]: ...
@overload
def _regex_process(obj: list[Any], config: RegexMaskProcessConfig) -> list[Any]: ...
@overload
def _regex_process(obj: tuple[Any, ...], config: RegexMaskProcessConfig) -> tuple[Any, ...]: ...
@overload
def _regex_process(obj: dict[str, Any], config: RegexMaskProcessConfig) -> dict[str, Any]: ...
